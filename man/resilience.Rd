% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resilience_function.R
\name{resilience}
\alias{resilience}
\title{Provides time-varying and time-constant resilience metrics for
populations based on a list of matrix population models}
\usage{
resilience(
  listA,
  metrics = "all",
  bounds = FALSE,
  vector = "n",
  TDvector = FALSE,
  popname = NULL,
  time = "both",
  verbose = TRUE,
  accuracy = 0.01,
  iterations = 1e+05,
  f = "wide"
)
}
\arguments{
\item{listA}{a list of square, primitive, irreducible, non-negative numeric
matrices of any dimension}

\item{metrics}{"convt": Calculates the time to convergence of a
matrix projection model.\cr
"dr": Calculates the damping ratio of a given
matrix projection model.\cr
"inertia": Calculates population inertia for a
matrix projection model.\cr
"maxamp": Calculates maximal amplification for a
matrix projection model.\cr
"maxatt": Calculates maximal attenuation for a
matrix projection model.\cr
"reac": Calculates reactivity: first time step amplification
and first time step attenuation for a matrix
projection model.\cr
"all": all of the above metrics are provided.}

\item{bounds}{(optional) Boolean. Set to FALSE as default. If TRUE, specifies whether the upper and  lower
bound should be calculated. If initial vector is not specified, the function
provides metrics at their upper and lower bounds, calculated based on the stage-biased vector.
If vector is specified, the function provides also the metrics calculated
based on the initial vector.}

\item{vector}{a list of numeric vectors or one-column matrices describing the age/stage
distribution ('demographic structure') used to calculate a 'case-specific' resilience metric,
based on the stage or age-structure.}

\item{TDvector}{Boolean. Set to FALSE as default. Specifies whether or not the
user wants to obtain a time-dependent list of initial vectors. This vector
corresponds to the population stage distribution that is obtained from the projection
of the population to the current time step using the specified matrix for each time step.}

\item{popname}{a character string describing the name of the population.}

\item{time}{set to "both" as default. A character string: "constant", "varying" or "both" \cr
"constant": if the metrics are to be calculated over the whole study period; \cr
"varying": if the metrics are to be calculated for each time step.}

\item{verbose}{Boolean. Set to TRUE as default. Indicates whether the messages about failure
to compute particular metric should be displayed or not (default = TRUE)}

\item{accuracy}{option for calculating convergence time: the accuracy with which to determine convergence to asymptotic growth,
expressed as a proportion. Set to 0.01 by default.}

\item{iterations}{option for calculating convergence time: the maximum number of iterations of the model. Set to 1e+05 by default. For slowly-converging models
and/or high specified convergence accuracy, this may need to be increased.}

\item{f}{A character specifying whether the output should be shown in
"long" (demographic resilience metrics as row names) or in "wide" (demographic
resilience metrics as column names) format. Defaults to "wide".}
}
\value{
An object of class "resil", which is a dataframe
containing the requested resilience metrics.
}
\description{
The function \code{resilience} calculates resilience metrics of a population based
on a list of matrix population models.
}
\details{
This function works with a list of matrices or just with one matrix
and returns either time-varying metrics or time-constant metrics, depending
on what is requested by the user (argument \code{time}).
}
\examples{

# load data
data(bluecrane)

# simulate an initial vector
set.seed(1234)
Cranevec1 <- runif(5)
Cranevec1 <- Cranevec1/sum(Cranevec1) #scales the vector to sum up to 1


BC_TVTC_demres <-
  resilience(
    listA = bluecrane,
    metrics = "all",
    bounds = TRUE,
    vector = Cranevec1,
    TDvector = FALSE,
    popname = "blue crane",
    time = "varying",
    verbose = TRUE
  )

}
